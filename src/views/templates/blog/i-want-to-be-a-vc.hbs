{{#> base}}

<div class="blog-post-container">

    <h1 class="blog-post-title">I want to be a VC</h1>

    <article class="blog-post-content">
        <p>In April 2014, I participated in a 24-hour hackathon called the <a href="http://kc2014.overnightwebsitechallenge.com/teams/157" target="_blank">Nerdery Overnight Website Challenge</a>, where I joined a team of friends to develop a Rails-based web application. That was my first exposure to Ruby on Rails, and I wasn't too much help in terms of writing form helpers, link tag helpers, or applying any of the idiosyncrasies that almost every Rails developer learns on his/her first app.</p>
        <p>Nearly a year later, I call myself an amateur Rails dev. I can slap a blog together in two days. My front-end skills are pretty decent, and at work, I write QUnits and refactor JavaScript like nobody's business. In the past year, I've worked with great ardor in developing <a href="http://www.iwanttobeavc.com" target="_blank">I want to be a VC</a>, formerly known as <em>"a blog about tech startups, software development, and scale."</em> Those three topics, especially at this moment in history, tie together quite well, but sometime in the past few months, it became <em>"tech<b><span style="font-size:1.25em;">,</span></b> startups, software development, and scale."</em></p>
        <p>In developing <a href="http://www.iwanttobeavc.com" target="_blank">I want to be a VC</a>, I used <a href="https://github.com/sparklemotion/nokogiri" target="_blank">Nokogiri</a> and its analogs, <a href="https://github.com/sparklemotion/mechanize" target="_blank">Mechanize</a> and <a href="https://github.com/cantino/ruby-readability" target="_blank">Readability for Ruby</a>. <a href="https://github.com/feedjira/feedjira" target="_blank">Feedjira</a> makes an appearance for some RSS feed reading, too, but most of what eventually became a robust news aggregator stems from web scraping.</p>
        <p><u>
                <h4>Why, though?</h4>
            </u></p>
        <p><a href="http://www.iwanttobeavc.com" target="_blank">I want to be a VC</a> came about due to a problem I was having. I love reading tech news with Twitter, but even with <a href="https://media.twitter.com/best-practice/twitter-cards" target="_blank">rich media</a>, I wanted to get a better peek at the articles I was reading. While the full article text is scraped in the app, only the first 300 words are posted, and by clicking the title of the article or the <a href="http://www.iwanttobeavc.com" target="_blank">(more...)</a> link, you are taken to the article itself. This provides a limitless scrolling experience on a UI that's easy on the eyes and keeps me out of hot water with the content creators.</p>
        <p>In November 2014, I finished aggregating the 42 news sources I wanted to read, but I was having some issues. Errors and 404s popped up in a seemingly random fashion on some articles, my parsing algorithm would fail because the code was bulky, and the organization of the CSS styles was disgusting. I spent time refactoring, error catching, and rescuing code that was slipping through the digital cracks, all while delaying my deployment. Then life got in the way - I started working on my Coursera courses, the holiday season hit, and I was coming up with excuses to avoid the painful task of making <a href="http://www.iwanttobeavc.com" target="_blank">I want to be a VC</a> perfect. This past weekend, though, I spent about 8 hours refactoring that CSS and at 2 am on Saturday night, my assets wouldn't precompile. In fact, as of this post, the subheading is directly up against the main heading. I decided to say 'screw it' to perfection, aggregate my first batch of in-production news articles, and deploy. As far as I see it, this is better than inaction or inertia.</p>
        <p><u>
                <h4>What's my vision for my news aggregator?</h4>
            </u></p>
        <p>First, for the record, I think it sounds cooler to just say 'blog.' One word, one syllable. Is there a similar contraction for 'news aggregator?' Nagg? Newsagg? Naggregator? As long as I don't get <a href="http://business.time.com/2013/03/27/why-is-that-17-year-olds-25-million-news-app-even-legal/" target="_blank">sued for copyright infringement</a> (yes, I even asked my attorney), I would like to apply machine learning techniques to outdo even <a href="http://embed.ly/" target="_blank">Embedly</a>, the API I was originally using to aggregate the articles, instead of using parsing. I would like to understand what makes articles go viral and analyze digital media trends and how they intersect with our daily lives.</p>
        <p>Eventually, I'd also like to make good on the promise of the domain's name and aggregate the output of venture capitalists and VC firms, potentially gaining <a href="http://mattermark.com/" target="_blank">Mattermark-</a> or <a href="http://quid.com/" target="_blank">Quid-like</a> insight into industry trends and topics. For now, though, I've got some refactoring to do.</p>
    </article>

    <p class="blog-post-tags"><span class="blog-post-tag">i want to be a vc</span><span class="blog-post-tag">projects</span></p>

    <p class="blog-post-created-at">Published February 03, 2015</p>

    {{> blog-post-comment}}

</div>

{{/base}}